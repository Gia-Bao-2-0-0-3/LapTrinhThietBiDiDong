//Coding Challenge #1
const game = {
    team1: 'Bayern Munich',
    team2: 'Borrussia Dortmund',
    players: [
      [
        'Neuer',
        'Pavard',
        'Martinez',
        'Alaba',
        'Davies',
        'Kimmich',
        'Goretzka',
        'Coman',
        'Muller',
        'Gnarby',
        'Lewandowski',
      ],
      [
        'Burki',
        'Schulz',
        'Hummels',
        'Akanji',
        'Hakimi',
        'Weigl',
        'Witsel',
        'Hazard',
        'Brandt',
        'Sancho',
        'Gotze',
      ],
    ],
    score: '4:0',
    scored: ['Lewandowski', 'Gnarby', 'Lewandowski', 'Hummels'],
    date: 'Nov 9th, 2037',
    odds: {
      team1: 1.33,
      x: 3.25,
      team2: 6.5,
    },
  };
  
  // 1. T·∫°o m·∫£ng c·∫ßu th·ªß cho m·ªói ƒë·ªôi
  const [players1, players2] = game.players;
  
  // 2. Tr√≠ch xu·∫•t th·ªß m√¥n v√† c√°c c·∫ßu th·ªß c√≤n l·∫°i cho Bayern Munich
  const [gk, ...fieldPlayers] = players1;
  
  // 3. T·∫°o m·∫£ng ch·ª©a t·∫•t c·∫£ c·∫ßu th·ªß c·ªßa c·∫£ hai ƒë·ªôi
  const allPlayers = [...players1, ...players2];
  
  // 4. T·∫°o m·∫£ng m·ªõi ch·ª©a t·∫•t c·∫£ c·∫ßu th·ªß g·ªëc c·ªßa ƒë·ªôi 1 c·ªông v·ªõi c√°c c·∫ßu th·ªß thay th·∫ø
  const players1Final = [...players1, 'Thiago', 'Coutinho', 'Perisic'];
  
  // 5. Tr√≠ch xu·∫•t c√°c t·ª∑ l·ªá c∆∞·ª£c v√†o c√°c bi·∫øn
  const { team1, x: draw, team2 } = game.odds;
  
  // 6. H√†m in t√™n c·∫ßu th·ªß v√† t·ªïng s·ªë b√†n th·∫Øng
  const printGoals = function (...players) {
    console.log(`${players.length} goals were scored`);
    for (const player of players) {
      console.log(player);
    }
  };
  
  // D·ªØ li·ªáu ki·ªÉm tra cho printGoals
  printGoals('Davies', 'Muller', 'Lewandowski', 'Kimmich');
  printGoals(...game.scored);
  
  // 7. X√°c ƒë·ªãnh v√† in ra ƒë·ªôi n√†o c√≥ kh·∫£ nƒÉng th·∫Øng cao h∆°n
  team1 < team2 && console.log('Team 1 is more likely to win');
  team1 > team2 && console.log('Team 2 is more likely to win');

//Coding Challenge #2
// 1. L·∫∑p qua m·∫£ng game.scored v√† in t√™n m·ªói c·∫ßu th·ªß ra console
  game.scored.forEach((player, index) => {
  console.log(`Goal ${index + 1}: ${player}`);
  });
  
  // 2. T√≠nh trung b√¨nh t·ª∑ l·ªá c∆∞·ª£c v√† in ra console
  const odds = Object.values(game.odds);
  const averageOdd = odds.reduce((sum, odd) => sum + odd, 0) / odds.length;
  console.log(`Average odd: ${averageOdd}`);
  
  // 3. In 3 t·ª∑ l·ªá c∆∞·ª£c ra console theo ƒë·ªãnh d·∫°ng ƒë·∫πp
  console.log(`Odd of victory ${game.team1}: ${game.odds.team1}`);
  console.log(`Odd of draw: ${game.odds.x}`);
  console.log(`Odd of victory ${game.team2}: ${game.odds.team2}`);
  
  // 4.T·∫°o ƒë·ªëi t∆∞·ª£ng 'scorers'
  const scorers = {};
  game.scored.forEach(player => {
    scorers[player] = (scorers[player] || 0) + 1;
  });
  console.log(scorers);

//Coding Challenge #3
const gameEvents = new Map([
    [17, '‚öΩ GOAL'],
    [36, 'üîÅ Substitution'],
    [47, '‚öΩ GOAL'],
    [61, 'üîÅ Substitution'],
    [64, 'üî∂ Yellow card'],
    [69, 'üî¥ Red card'],
    [70, 'üîÅ Substitution'],
    [72, 'üîÅ Substitution'],
    [76, '‚öΩ GOAL'],
    [80, '‚öΩ GOAL'],
    [92, 'üî∂ Yellow card'],
  ]);
  
  // 1. T·∫°o m·ªôt m·∫£ng 'events' ch·ª©a c√°c s·ª± ki·ªán kh√°c nhau trong tr·∫≠n ƒë·∫•u (kh√¥ng tr√πng l·∫∑p)

  const events = [...new Set(gameEvents.values())];
  console.log(events);
  
  // 2. X√≥a s·ª± ki·ªán th·∫ª v√†ng ·ªü ph√∫t 64

  gameEvents.delete(64);
  
  // 3. T√≠nh v√† in ra t·∫ßn su·∫•t trung b√¨nh c·ªßa c√°c s·ª± ki·ªán
  const totalEvents = gameEvents.size;
  const averageFrequency = 90 / totalEvents;
  console.log(`An event happened, on average, every ${averageFrequency.toFixed(2)} minutes`);
  
  // 4. L·∫∑p qua 'gameEvents' v√† in t·ª´ng ph·∫ßn t·ª≠ ra console
  for (const [minute, event] of gameEvents) {
    const half = minute <= 45 ? '[FIRST HALF]' : '[SECOND HALF]';
    console.log(`${half} ${minute}: ${event}`);
  }